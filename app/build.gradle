buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
}

plugins {
    id 'com.android.application'
    id 'net.ltgt.errorprone' version '3.0.1'
}

android {
    defaultConfig {
        compileSdk 34
    }
    buildFeatures {
        buildConfig = true
    }
    defaultConfig {
        applicationId 'fr.neamar.kiss'
        minSdkVersion 29
        targetSdkVersion 34
        versionCode 210
        versionName "3.21.2"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    namespace 'fr.neamar.kiss'
}

dependencies {
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.test:rules:1.5.0'

    implementation 'io.minio:minio:8.5.12'
    implementation 'com.google.code.gson:gson:2.11.0'
    implementation 'androidx.annotation:annotation:1.8.2'
    implementation 'com.github.joshjdevl.libsodiumjni:libsodium-jni-aar:2.0.2'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.3'
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.10.3')
    testImplementation 'org.hamcrest:hamcrest-library:2.2'

    errorprone('com.google.errorprone:error_prone_core:2.29.2')
}

tasks.withType(JavaCompile).configureEach {
    options.errorprone {
        disableWarningsInGeneratedCode = true
        disable('MissingOverride')
        disable('MissingSummary')
        disable('EmptyBlockTag')
        disable('EmptyCatch')
    }
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}
